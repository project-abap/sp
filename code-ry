*&---------------------------------------------------------------------*
*& Report  YCOR194A
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT YCOR194A NO STANDARD PAGE HEADING.

" Espiritu, Jefferson Rylee F.

TYPE-POOLS: vrm.

" commons
TYPES: FLOAT TYPE P DECIMALS 2.

"Dropdowns"
DATA:
  vrm_id TYPE vrm_id,
  vrm_list TYPE vrm_values,
  vrm_item LIKE LINE OF vrm_list.

"Dropdown Declaration"
AT SELECTION-SCREEN OUTPUT.

  " employment type
  CLEAR vrm_list.
  vrm_id = 'emp_type'.
  vrm_item-key = '1'. vrm_item-text = 'Private Employee'. APPEND vrm_item TO vrm_list.
  vrm_item-key = '2'. vrm_item-text = 'Government Employee'. APPEND vrm_item TO vrm_list.
  vrm_item-key = '3'. vrm_item-text = 'RHQ/ROHQ Employee'. APPEND vrm_item TO vrm_list.
  vrm_item-key = '4'. vrm_item-text = 'Minimum Wage Employee'. APPEND vrm_item TO vrm_list.

  CALL FUNCTION 'VRM_SET_VALUES' EXPORTING id = vrm_id values = vrm_list.

  " payroll period
  CLEAR vrm_list.
  vrm_id = 'payr_prd'.
  vrm_item-key = '1'. vrm_item-text = 'Daily'. APPEND vrm_item TO vrm_list.
  vrm_item-key = '2'. vrm_item-text = 'Weekly'. APPEND vrm_item TO vrm_list.
  vrm_item-key = '3'. vrm_item-text = 'Semi-Monthly'. APPEND vrm_item TO vrm_list.
  vrm_item-key = '4'. vrm_item-text = 'Monthly'. APPEND vrm_item TO vrm_list.

  CALL FUNCTION 'VRM_SET_VALUES' EXPORTING id = vrm_id values = vrm_list.



"
"! actual start of program duh
"

START-OF-SELECTION.

SELECTION-SCREEN BEGIN OF BLOCK S_INPUT WITH FRAME TITLE S_INPUT.

  PARAMETERS:
    emp_type(22) AS LISTBOX VISIBLE LENGTH 22 OBLIGATORY DEFAULT '1', " employment type
    payr_prd(22) AS LISTBOX VISIBLE LENGTH 22 OBLIGATORY DEFAULT '4', " payroll period
    no_days TYPE FLOAT, " number of days
    bsc_pay TYPE FLOAT. " basic pay

SELECTION-SCREEN END OF BLOCK S_INPUT.

" basic allowance
SELECTION-SCREEN BEGIN OF BLOCK S_ALLOW WITH FRAME TITLE S_ALLOW.

  PARAMETERS:
    tax_awc TYPE FLOAT, " taxable allowance
    ntax_awc TYPE FLOAT. " non-taxable allowance

SELECTION-SCREEN END OF BLOCK S_ALLOW.

" night differential
SELECTION-SCREEN BEGIN OF BLOCK N_DIFF WITH FRAME TITLE N_DIFF.

  PARAMETERS:
    NIGHTD AS CHECKBOX USER-COMMAND ND,
    ndHour TYPE I,
    ndiffRte TYPE FLOAT.

SELECTION-SCREEN END OF BLOCK N_DIFF.

" overtime
SELECTION-SCREEN BEGIN OF BLOCK O_TIME WITH FRAME TITLE O_TIME.

  PARAMETERS:
    OVRTM AS CHECKBOX USER-COMMAND OT, " OT checkbox
    OTHours TYPE I, " OT number of hours
    OTRte TYPE FLOAT. " OT rate

SELECTION-SCREEN END OF BLOCK O_TIME.

" income rate
SELECTION-SCREEN BEGIN OF BLOCK INC_RATE WITH FRAME TITLE INC_RATE.

  PARAMETERS:
    mnthly RADIOBUTTON GROUP grp DEFAULT 'X', " monthly
    s_mnthly RADIOBUTTON GROUP grp, " semi-monthly
    annual RADIOBUTTON GROUP grp. " annual

SELECTION-SCREEN END OF BLOCK INC_RATE.

END-OF-SELECTION.

" titles
START-OF-SELECTION.

INITIALIZATION.
  S_INPUT = 'Input'.
  S_ALLOW = 'Allowance'.
  N_DIFF = 'Night Differential'.
  O_TIME = 'Overtime'.
  INC_RATE = 'Rates'.

END-OF-SELECTION.


"
" declarations and computations
"

DATA: irRate TYPE FLOAT.

IF mnthly = 'X'. " monthly
  irRate = 1.
ELSEIF s_mnthly = 'X'. " semi-monthly
  irRate = '0.5'.
ELSEIF annual = 'X'. " annual
  irRate = 12.
ENDIF.


"
" payroll period
"

DATA: PayMult TYPE FLOAT. " pay multiplier

CASE payr_prd.
  WHEN '1'. PayMult = no_days. " daily
  WHEN '2'. PayMult = '4'. " weekly
  WHEN '3'. PayMult = '2'. " semi-monthly
  WHEN '4'. PayMult = '1'. " monthly
ENDCASE.


"
" monthly payment
"

DATA:
  n_basPay TYPE FLOAT, " new basic pay
  m_basPay TYPE FLOAT. " monthly basic pay

n_basPay = bsc_pay * payMult. " new basic pay
m_basPay = n_basPay. " monthly basic pay

" irRate mult
n_basPay = n_basPay * irRate.

bsc_pay = n_basPay.


"
" allowance computation
"

DATA:
  taxable TYPE FLOAT,
  n_taxable TYPE FLOAT.

taxable = ( tax_awc * PayMult ). " taxable
n_taxable = ( ntax_awc * PayMult ). " non-taxable

" irRate mult
taxable = taxable * irRate.
n_taxable = n_taxable * irRate.

tax_awc = taxable.
ntax_awc = n_taxable.

"
" night differential computation
"

DATA:
  MO_HRS TYPE FLOAT VALUE '243.3326844461748', " number of hours per month
  ndiffPay TYPE FLOAT VALUE 0. " night differential pay

IF NIGHTD = 'X'.
  ndiffPay = ( ( bsc_pay + n_taxable + taxable ) / MO_HRS ) * ( ndiffRte / 100 ) * ndHour.

  " irRate mult
  ndiffPay = ndiffPay * irRate.

ENDIF.


"
" OT computation
"

DATA: OTPay TYPE FLOAT VALUE 0.

IF OVRTM = 'X'.
  OTPay = ( ( bsc_pay + n_taxable + taxable ) / MO_HRS ) * ( OTRte / 100 ) * OTHours.

  " irRate mult
  OTHours = OTHours * irRate.

ENDIF.


"
" SSS contribution
"

DATA: SSSc TYPE FLOAT.

" monthly basic pay check
IF m_basPay < 2250.
  SSSc = 20. """ 80 in site
ELSEIF m_basPay >= 19750.
  SSSc = 800.
ELSE.
  SSSc = ROUND( val = ( m_basPay / 500 ) dec = 0 ) * 20.

ENDIF.

" irRate mult
SSSc = SSSc * irRate.


"
" GSIS contribution
"

DATA: GSIS TYPE FLOAT.
GSIS = bsc_pay * '0.09'.


"
" PhilHealth contributions
"

DATA: PHc TYPE FLOAT.

" monthly basic pay check
IF m_basPay <= 10000.
  PHc = '137.50'.
ELSEIF m_basPay >= 40000.
  PHc = '550'.
ELSE.
  PHc = ( m_basPay * '0.0275' ) / 2.
ENDIF.

" irRate mult
PHc = PHc * irRate.


"
" Pag ibig contributions
"

DATA: PIc TYPE FLOAT.

" monthly basic pay check
IF m_basPay >= 5000.
  PIc = 100.
ELSEIF m_basPay < 1500.
  PIc = m_basPay * '0.01'.
ELSEIF bsc_pay >= 1500.
  PIc = m_basPay * '0.02'.
ENDIF.

" irRate mult
PIc = PIc * irRate.


"
" withholding tax
"

DATA:
  whTax TYPE FLOAT,
  whTaxTotal TYPE FLOAT.

IF emp_type = 4.
  whTax = 0.
ELSE.
  whTaxTotal = ( m_basPay - ( SSSc + PHc + PIc ) ) + taxable.
  IF whTaxTotal <= 20833.
    whTax = 0.
  ELSEIF whTaxTotal > 20833 AND whTaxTotal <= 33333.
    whTax = ( whTaxTotal - 20833 ) * '.20'.
  ELSEIF whTaxTotal > 33333 AND whTaxTotal <= 66667.
    whTax = ( ( whTaxTotal - 33333 ) * '.25' ) + 2500.
  ELSEIF whTaxTotal > 66667 AND whTaxTotal <= 166667.
    whTax = ( ( whTaxTotal - 66667 ) * '.30' ) + '10833.33'.
  ELSEIF whTaxTotal > 166667 AND whTaxTotal <= 666667.
    whTax = ( ( whTaxTotal - 166667 ) * '.32' ) + '40833.33'.
  ELSEIF whTaxTotal > 666667.
    whTax = ( ( whTaxTotal - 666667 ) * '.35' ) + '200833.33'.
  ENDIF.
ENDIF.


" irRate mult
whTax = whTax * irRate.

"
"
"! computations for
"
" total deductions
" gross pay
" net pay
"

DATA:
  totDeduc TYPE FLOAT,
  gPay TYPE FLOAT,
  NPay TYPE FLOAT.

totDeduc = whTax + SSSc + PHc + PIc.
gPay = bsc_pay + tax_awc + ntax_awc + ndiffPay + OTPay.
NPay = gPay - totDeduc.


"
" show actual output here
"

DATA: ulLen TYPE I VALUE 16.
ulLen = ulLen + 75.

WRITE:
  / 'Results',
  / SY-ULINE(ulLen).

SKIP 1.

WRITE:
  'Basic Pay: ', 75 bsc_pay,
  / 'Taxable Allowance: ', 75 tax_awc,
  / 'Non-Taxable Allowance: ', 75 ntax_awc,
  / 'Night Differential Pay: ', 75 ndiffPay,
  / 'Overtime Pay: ', 75 OTPay.

WRITE: / SY-ULINE(ulLen).
WRITE: / 'Gross Pay: ', 75 gPay.
WRITE: / SY-ULINE(ulLen).

WRITE: / 'Withholding Tax: ', 75 whTax.

IF emp_type = '2'.
  WRITE: / 'GSIS Contribution: ', 75 SSSc.
ELSE.
  WRITE: / 'SSS Contribution: ', 75 SSSc.
ENDIF.

WRITE:
  / 'PhilHealth Contribution: ', 75 PHc,
  / 'PAG-IBIG Contribution: ', 75 PIc.

WRITE: / SY-ULINE(ulLen).
WRITE: / 'Total Deductions: ', 75 totDeduc.
WRITE: / SY-ULINE(ulLen).
WRITE: / 'Net Pay: ', 75 NPay.
